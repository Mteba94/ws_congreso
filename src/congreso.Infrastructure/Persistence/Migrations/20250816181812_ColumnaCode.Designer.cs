// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using congreso.Infrastructure.Persistence.Context;

#nullable disable

namespace congreso.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250816181812_ColumnaCode")]
    partial class ColumnaCode
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("congreso.Domain.Entities.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idActividad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CongresoId")
                        .HasColumnType("int")
                        .HasColumnName("idCongreso");

                    b.Property<int>("CuposDisponibles")
                        .HasColumnType("int")
                        .HasColumnName("CuposDisponibles");

                    b.Property<int>("CuposTotales")
                        .HasColumnType("int")
                        .HasColumnName("CuposTotales");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Descripcion");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActividad")
                        .HasColumnType("date")
                        .HasColumnName("FechaActividad");

                    b.Property<DateTime>("HoraFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("HoraFin");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("HoraInicio");

                    b.Property<string>("RequisitosPrevios")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("RequisitosPrevios");

                    b.Property<int>("TipoActividadId")
                        .HasColumnType("int")
                        .HasColumnName("idTipoActividad");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Titulo");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Ubicacion");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioEliminacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CongresoId");

                    b.HasIndex("TipoActividadId");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("congreso.Domain.Entities.ActividadPonente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idActividadPonente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("PonenteId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ActividadId");

                    b.HasIndex("PonenteId");

                    b.ToTable("ActividadesPonentes");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Asistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAsistencia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("InscripcionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioEliminacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActividadId");

                    b.HasIndex("InscripcionId");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("congreso.Domain.Entities.CodigoVerificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCodigoVerificacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)")
                        .HasColumnName("codigo");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("Codigo", "UserId")
                        .IsUnique();

                    b.ToTable("CodigosVerificacion");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Congreso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCongreso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaFin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaInicio");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioEliminacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Congresos");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Diploma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDiploma");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActividadId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDiploma")
                        .HasColumnType("int");

                    b.Property<int>("InscripcionId")
                        .HasColumnType("int");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioEliminacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActividadId");

                    b.HasIndex("InscripcionId");

                    b.ToTable("Diplomas");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idInscripcion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActividadId")
                        .HasColumnType("int")
                        .HasColumnName("idActividad");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInscripcion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaInscripcion");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioEliminacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActividadId");

                    b.HasIndex("UserId");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("congreso.Domain.Entities.NivelAcademico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nivelAcademicoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("NivelesAcademicos");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Ponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPonente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("Biografia")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("bio");

                    b.Property<string>("Empresa")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("empresa");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("image");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Titulo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("titulo");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioEliminacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ponentes");
                });

            modelBuilder.Entity("congreso.Domain.Entities.PonenteTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPonenteTags");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PonenteId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PonenteId");

                    b.HasIndex("TagId");

                    b.ToTable("PonenteTags");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRole");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("congreso.Domain.Entities.RoleUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuarioRoles");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("RolesUsuarios");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTag");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("congreso.Domain.Entities.TipoActividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoActividad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("TiposActividades");
                });

            modelBuilder.Entity("congreso.Domain.Entities.TipoIdentificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoIdentificacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("TiposIdentificacion");
                });

            modelBuilder.Entity("congreso.Domain.Entities.TipoParticipante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoParticipante");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("TiposParticipante");
                });

            modelBuilder.Entity("congreso.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccessFailedCount")
                        .HasColumnType("int")
                        .HasColumnName("accessFailedCount");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("email");

                    b.Property<bool?>("EmailConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("emailConfirmed");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaNacimiento");

                    b.Property<int?>("LockoutEnabled")
                        .HasColumnType("int")
                        .HasColumnName("lockOutEnabled");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasColumnType("datetime2")
                        .HasColumnName("lockOutEnd");

                    b.Property<int>("NivelAcademicoId")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("nivelAcademicoId");

                    b.Property<string>("NumeroIdentificacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numeroIdentificacion");

                    b.Property<string>("Papellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("primerApellido");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("password");

                    b.Property<string>("Pnombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("primerNombre");

                    b.Property<string>("Sapellido")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("segundoApellido");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("securityStamp");

                    b.Property<int?>("Semestre")
                        .HasColumnType("int")
                        .HasColumnName("semestre");

                    b.Property<string>("Snombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("segundoNombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("telefono");

                    b.Property<int>("TipoIdentificacionId")
                        .HasColumnType("int")
                        .HasColumnName("tipoIdentificacion");

                    b.Property<int>("TipoParticipanteId")
                        .HasColumnType("int")
                        .HasColumnName("tipoParticipante");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuarioCreacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioEliminacion")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioModificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NivelAcademicoId");

                    b.HasIndex("TipoIdentificacionId");

                    b.HasIndex("TipoParticipanteId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Actividad", b =>
                {
                    b.HasOne("congreso.Domain.Entities.Congreso", "Congreso")
                        .WithMany()
                        .HasForeignKey("CongresoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("congreso.Domain.Entities.TipoActividad", "TipoActividad")
                        .WithMany()
                        .HasForeignKey("TipoActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Congreso");

                    b.Navigation("TipoActividad");
                });

            modelBuilder.Entity("congreso.Domain.Entities.ActividadPonente", b =>
                {
                    b.HasOne("congreso.Domain.Entities.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("congreso.Domain.Entities.Ponente", "Ponente")
                        .WithMany()
                        .HasForeignKey("PonenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Ponente");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Asistencia", b =>
                {
                    b.HasOne("congreso.Domain.Entities.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("congreso.Domain.Entities.Inscripcion", "Inscripcion")
                        .WithMany("Asistencias")
                        .HasForeignKey("InscripcionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("congreso.Domain.Entities.CodigoVerificacion", b =>
                {
                    b.HasOne("congreso.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Diploma", b =>
                {
                    b.HasOne("congreso.Domain.Entities.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("congreso.Domain.Entities.Inscripcion", "Inscripcion")
                        .WithMany("Diplomas")
                        .HasForeignKey("InscripcionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Inscripcion", b =>
                {
                    b.HasOne("congreso.Domain.Entities.Actividad", "Actividad")
                        .WithMany()
                        .HasForeignKey("ActividadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("congreso.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("User");
                });

            modelBuilder.Entity("congreso.Domain.Entities.PonenteTag", b =>
                {
                    b.HasOne("congreso.Domain.Entities.Ponente", "Ponente")
                        .WithMany()
                        .HasForeignKey("PonenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("congreso.Domain.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ponente");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("congreso.Domain.Entities.RoleUsuario", b =>
                {
                    b.HasOne("congreso.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("congreso.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("congreso.Domain.Entities.User", b =>
                {
                    b.HasOne("congreso.Domain.Entities.NivelAcademico", "nivelAcademico")
                        .WithMany()
                        .HasForeignKey("NivelAcademicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("congreso.Domain.Entities.TipoIdentificacion", "tipoIdentificacion")
                        .WithMany()
                        .HasForeignKey("TipoIdentificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("congreso.Domain.Entities.TipoParticipante", "tipoParticipante")
                        .WithMany()
                        .HasForeignKey("TipoParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("nivelAcademico");

                    b.Navigation("tipoIdentificacion");

                    b.Navigation("tipoParticipante");
                });

            modelBuilder.Entity("congreso.Domain.Entities.Inscripcion", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Diplomas");
                });
#pragma warning restore 612, 618
        }
    }
}
